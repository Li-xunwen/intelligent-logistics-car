C51 COMPILER V9.60.7.0   PWM                                                               11/12/2024 01:34:50 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\PWM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE PWM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\PWM.l
                    -st) OBJECT(.\Objects\PWM.obj)

line level    source

   1          #include "PWM.h"
   2          
   3          
   4          void PWMAconfig()
   5          {
   6   1              P_SW2 |= 0x80; //扩展寄存器(XFR)访问使能
   7   1              P6M0 = 0x55; P6M1 = 0x00; 
   8   1              PWMA_CCER1 = 0x00; //写 CCMRx 前必须先清零 CCxE 关闭通道
   9   1          PWMA_CCER2 = 0x00;
  10   1          PWMA_CCMR1 = 0x68; //通道模式配置
  11   1          PWMA_CCMR2 = 0x68;
  12   1          PWMA_CCMR3 = 0x68;
  13   1          PWMA_CCMR4 = 0x68;
  14   1          PWMA_CCER1 = 0x33; //配置通道输出使能和极性
  15   1          PWMA_CCER2 = 0x33; 
  16   1          PWMA_ARRH = (unsigned char)(PWMA_PERIOD >> 8); //设置周期时间
  17   1          PWMA_ARRL = (unsigned char)PWMA_PERIOD;
  18   1          PWMA_ENO = 0x00;
  19   1          PWMA_ENO |= ENO1P; //使能输出
  20   1          PWMA_ENO |= ENO2P; //使能输出
  21   1          PWMA_ENO |= ENO3P; //使能输出
  22   1          PWMA_ENO |= ENO4P; //使能输出
  23   1          PWMA_PS = 0x00;    //高级 PWM 通道输出脚选择位
  24   1          PWMA_PS |= PWM1_3; //选择 PWM1_3 通道
  25   1          PWMA_PS |= PWM2_3; //选择 PWM2_3 通道
  26   1          PWMA_PS |= PWM3_3; //选择 PWM3_3 通道
  27   1          PWMA_PS |= PWM4_3; //选择 PWM4_3 通道
  28   1          PWMA_BKR = 0x80;   //使能主输出
  29   1          PWMA_CR1 |= 0x01;  //开始计时 
  30   1      }
  31          void PWMBconfig()
  32          {
  33   1              P_SW2 |= 0x80; //扩展寄存器(XFR)访问使能
  34   1              P7M0 = 0xf0; P7M1 = 0x00; 
  35   1              PWMB_CCER1 = 0x00; //写 CCMRx 前必须先清零 CCxE 关闭通道
  36   1          PWMB_CCER2 = 0x00;
  37   1          PWMB_CCMR1 = 0x68; //通道模式配置
  38   1          PWMB_CCMR2 = 0x68;
  39   1          PWMB_CCMR3 = 0x68;
  40   1          PWMB_CCMR4 = 0x68;
  41   1          PWMB_CCER1 = 0x33; //配置通道输出使能和极性
  42   1          PWMB_CCER2 = 0x33; 
  43   1          PWMB_ARRH = (unsigned char)(PWMB_PERIOD >> 8); //设置周期时间
  44   1          PWMB_ARRL = (unsigned char)PWMB_PERIOD;
  45   1          PWMB_ENO = 0x00;
  46   1          PWMB_ENO |= ENO5P; //使能输出
  47   1          PWMB_ENO |= ENO6P; //使能输出
  48   1          PWMB_ENO |= ENO7P; //使能输出
  49   1          PWMB_ENO |= ENO8P; //使能输出
  50   1          PWMB_PS = 0x00;    //高级 PWM 通道输出脚选择位
  51   1          PWMB_PS |= PWM5_4; //选择 PWM5_4 通道
  52   1          PWMB_PS |= PWM6_4; //选择 PWM6_4 通道
  53   1          PWMB_PS |= PWM7_4; //选择 PWM7_4 通道
  54   1          PWMB_PS |= PWM8_4; //选择 PWM8_4 通道
C51 COMPILER V9.60.7.0   PWM                                                               11/12/2024 01:34:50 PAGE 2   

  55   1          PWMB_BKR = 0x80;   //使能主输出
  56   1          PWMB_CR1 |= 0x01;  //开始计时
  57   1      
  58   1      }
  59          void PWM1(unsigned int Duty)
  60          {
  61   1       Duty=1024-Duty;
  62   1       PWMA_CCR1H = (unsigned char)(Duty >> 8); //设置占空比时间
  63   1       PWMA_CCR1L = (unsigned char)(Duty);
  64   1      }
  65          
  66          void PWM2(unsigned int Duty)
  67          {
  68   1       Duty=1024-Duty;
  69   1       PWMA_CCR2H = (unsigned char)(Duty >> 8); //设置占空比时间
  70   1       PWMA_CCR2L = (unsigned char)(Duty);
  71   1      }
  72          
  73          void PWM3(unsigned int Duty)
  74          {
  75   1       Duty=1024-Duty;
  76   1       PWMA_CCR3H = (unsigned char)(Duty >> 8); //设置占空比时间
  77   1       PWMA_CCR3L = (unsigned char)(Duty);
  78   1      }
  79          
  80          void PWM4(unsigned int Duty)
  81          {
  82   1       Duty=1024-Duty;
  83   1       PWMA_CCR4H = (unsigned char)(Duty >> 8); //设置占空比时间
  84   1       PWMA_CCR4L = (unsigned char)(Duty);
  85   1      }
  86          
  87          
  88          void PWM5(unsigned int Duty)
  89          {
  90   1       PWMB_CCR5H = (unsigned char)(Duty >> 8); //设置占空比时间
  91   1       PWMB_CCR5L = (unsigned char)(Duty);
  92   1      }
  93          
  94          void PWM6(unsigned int Duty)
  95          {
  96   1       PWMB_CCR6H = (unsigned char)(Duty >> 8); //设置占空比时间
  97   1       PWMB_CCR6L = (unsigned char)(Duty);
  98   1      }
  99          
 100          void PWM7(unsigned int Duty)
 101          {
 102   1       PWMB_CCR7H = (unsigned char)(Duty >> 8); //设置占空比时间
 103   1       PWMB_CCR7L = (unsigned char)(Duty);
 104   1      }
 105          
 106          void PWM8(unsigned int Duty)
 107          {
 108   1       PWMB_CCR8H = (unsigned char)(Duty >> 8); //设置占空比时间
 109   1       PWMB_CCR8L = (unsigned char)(Duty);
 110   1      }
 111          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.7.0   PWM                                                               11/12/2024 01:34:50 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
